name: Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy backend
        run: |
          # write key locally
          echo "${{ secrets.PRIVATE_KEY }}" > vm.pem
          chmod 400 vm.pem

          # One SSH, two hops
          ssh \
            -i vm.pem \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            -J ubuntu@${{ secrets.EC2_FRONTEND }} \
            ubuntu@${{ secrets.EC2_BACKEND }} <<-'EOF'
            set -e
            set -e

            git clone https://github.com/QuanMinh086/investment-tracking-system.git

            # write .env with the GH‐expanded variables
            cat > ~/investment-tracking-system/backend/.env <<EOE
            PORT=8000
            DB_HOST=localhost
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_PORT=5432
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            EOE

            cd ~/investment-tracking-system/backend
            npm install

            # one-time DB & backend bootstrap
            if [ ! -f ~/.database_setup_done ]; then
              bash ~/.database_setup_done=false && \
              bash ~/backend/.github/workflows/database_setup.sh && \
              touch ~/.database_setup_done
            fi
            if [ ! -f ~/.backend_setup_done ]; then
              bash ~/backend/.github/workflows/backend_setup.sh && \
              touch ~/.backend_setup_done
            fi

            # idempotent PM2
            pm2 describe app >/dev/null 2>&1 \
              && pm2 restart app --update-env \
              || pm2 start backend/app.js --name app -f
          EOF
      
      # - name: Deploy frontend
      #   run: |
      #     ssh -o StrictHostKeyChecking=no -i vm.pem ubuntu@${{ secrets.EC2_FRONTEND }} << "EOF"
      #     sudo apt update && sudo apt upgrade -y

      #     git clone https://github.com/QuanMinh086/investment-tracking-system.git

      #     if [ ! -f /home/ubuntu/.react_setup_done ]; then
      #       bash /home/ubuntu/investment-tracking-system/.github/workflows/react_setup.sh
      #       touch /home/ubuntu/.react_setup_done
      #     fi

      #     cd investment-tracking-system
      #     sudo mv frontend/ /home/ubuntu
      #     cd /home/ubuntu/frontend/

      #     if [ ! -f /home/ubuntu/.env_setup_done ]; then
      #       cat <<EOT > /home/ubuntu/frontend/.env
      #       REACT_APP_API_URL=/api
      #       EOT
      #       touch /home/ubuntu/.env_setup_done
      #     fi
          
      #     npm install
      #     npm run build
      #     sudo mv build /var/www/app

      #     if [ ! -f /home/ubuntu/.nginx_setup_done ]; then
      #       bash /home/ubuntu/investment-tracking-system/.github/workflows/nginx.sh
      #       touch /home/ubuntu/.nginx_setup_done
      #     fi

      #     sudo rm -rf investment-tracking-system

      #     sudo nginx -t
      #     sudo systemctl restart nginx

      #     EOF