name: Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy backend
        run: |
          echo "${{ secrets.PRIVATE_KEY }}" > vm.pem
          chmod 400 vm.pem

          if ! ssh -o StrictHostKeyChecking=no -i vm.pem ubuntu@${{ secrets.EC2_FRONTEND }} \
              "[ -f /home/ubuntu/vm.pem ]"; then
            scp -o StrictHostKeyChecking=no -i vm.pem \
                vm.pem \
                ubuntu@${{ secrets.EC2_FRONTEND }}:/home/ubuntu/vm.pem
          fi
          
          ssh -o StrictHostKeyChecking=no -i vm.pem ubuntu@${{ secrets.EC2_FRONTEND }} << "FRONTEND"
          chmod 400 ~/vm.pem

          ssh -o StrictHostKeyChecking=no -i ~/vm.pem ubuntu@${{ secrets.EC2_BACKEND }} << "BACKEND"

          sudo apt update && sudo apt upgrade -y

          sudo rm -rf ~/backend
          git clone https://github.com/QuanMinh086/investment-tracking-system.git

          if [ ! -f ~/.database_setup_done ]; then
            export DB_USER='${{ secrets.DB_USER }}'
            export DB_PASSWORD='${{ secrets.DB_PASSWORD }}'
            export DB_NAME='${{ secrets.DB_NAME }}'
            bash ~/investment-tracking-system/.github/workflows/database_setup.sh
            touch ~/.database_setup_done
          fi

          cd ~/investment-tracking-system/backend
          cat <<EOT > .env
          PORT=8000
          DB_HOST=localhost
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_NAME=${{ secrets.DB_NAME }}
          DB_PORT=5432
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          EOT

          sudo mv ~/investment-tracking-system/backend ~/
          sudo rm -rf ~/investment-tracking-system

          cd ~/backend
          npm install

          if pm2 describe app >/dev/null 2>&1; then
            echo "→ pm2 process 'app' found; restarting"
            pm2 restart app
          else
            echo "→ no existing pm2 process named 'app'; starting fresh"
            pm2 start app.js --name app
          fi

          BACKEND
          FRONTEND
      
      - name: Deploy frontend
        run: |
          ssh -o StrictHostKeyChecking=no -i vm.pem ubuntu@${{ secrets.EC2_FRONTEND }} << "EOF"
          sudo apt update && sudo apt upgrade -y

          sudo rm -rf frontend
          git clone https://github.com/QuanMinh086/investment-tracking-system.git

          if [ ! -f /home/ubuntu/.react_setup_done ]; then
            bash /home/ubuntu/investment-tracking-system/.github/workflows/react_setup.sh
            touch /home/ubuntu/.react_setup_done
          fi

          cd investment-tracking-system/frontend
          if [ ! -f /home/ubuntu/.env_setup_done ]; then
            cat <<EOT > .env
            REACT_APP_API_URL=/api
          EOT
            touch /home/ubuntu/.env_setup_done
          fi

          if [ ! -f /home/ubuntu/.nginx_setup_done ]; then
            bash /home/ubuntu/investment-tracking-system/.github/workflows/nginx.sh
            touch /home/ubuntu/.nginx_setup_done
          fi

          sudo mv investment-tracking-system/frontend /home/ubuntu
          sudo rm -rf investment-tracking-system

          npm install
          npm run build
          sudo mv build /var/www/app

          sudo nginx -t
          sudo systemctl restart nginx

          EOF